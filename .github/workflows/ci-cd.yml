# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Bot CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with unittest
        env:
          ADMIN_TELEGRAM_ID: ${{ secrets.ADMIN_TELEGRAM_ID }}
          API_MOVIE_DATA_URL: ${{ secrets.API_MOVIE_DATA_URL }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          DATABASE_TEST_URL: ${{ secrets.DATABASE_TEST_URL }}
          DEBUG: ${{ secrets.DEBUG }}
          MOVIE_MAP_URL: ${{ secrets.MOVIE_MAP_URL }}
        run: |
          python -m unittest discover tests

      - name: Deploy to Heroku
        env:
          HEROKU_AUTH_TOKEN: ${{ secrets.HEROKU_AUTH_TOKEN }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        if: job.status == 'success'
        run: |
          git push -f https://heroku:$HEROKU_AUTH_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git main
